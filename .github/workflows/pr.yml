name: PR Workflow

on:
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    name: Affected Matrix
    outputs:
      hasChanges: ${{ steps.affected.outputs.hasChanges }}
      matrix: ${{ steps.affected.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: .npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci --cache .npm

      - name: Calculate affected
        uses: ./dist/packages/nx-affected-matrix
        id: affected
        with:
          targets: 'test,build'

  execute:
    name: ${{ matrix.target }} (${{ matrix.bucket }})
    if: ${{ needs.setup.outputs.hasChanges == 'true' }}
    needs: [setup]
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.target == 'test' }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.setup.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: .npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci --cache .npm

      - name: Execute target
        uses: ./dist/packages/nx-distributed-task
        id: run
        with:
          nxCloud: true
          target: ${{ matrix.target }}
          bucket: ${{ matrix.bucket }}
          projects: ${{ matrix.projects }}

  coverage:
    name: Publish coverage
    runs-on: ubuntu-latest
    needs: [execute]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: test

      - uses: codecov/codecov-action@v1
        with:
          directory: ./coverage/packages/*

  publish:
    name: Publish actions
    runs-on: ubuntu-latest
    needs: [setup, execute]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Obtain GitHub App Installation Access Token
        id: githubAppAuth
        run: |
          TOKEN="$(npx obtain-github-app-installation-access-token ci ${{ secrets.GH_AUTH_SECRET }})"
          echo "::add-mask::$TOKEN"
          echo "::set-output name=token::$TOKEN"

      - name: Publish NX affected matrix
        if: ${{ contains(needs.setup.outputs.matrix, 'nx-affected-matrix') }}
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ steps.githubAppAuth.outputs.token }}
        with:
          source-directory: './build/dist/packages/nx-affected-matrix'
          destination-github-username: 'e-square-io'
          destination-repository-name: 'nx-affected-matrix'
          user-email: github@no-replay.net
          target-branch: main

      - name: Publish NX distributed task
        if: ${{ contains(needs.setup.outputs.matrix, 'nx-distributed-task') }}
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ steps.githubAppAuth.outputs.token }}
        with:
          source-directory: './build/dist/packages/nx-distributed-task'
          destination-github-username: 'e-square-io'
          destination-repository-name: 'nx-distributed-task'
          user-email: github@no-replay.net
          target-branch: main
